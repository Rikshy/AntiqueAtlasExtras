buildscript {
    repositories {
        jcenter()
        maven { url = "https://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'idea'
apply plugin: 'maven-publish'

version = "$mod_version.$patch_version"
group = "de.shyrik" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "AtlasExtras-$mc_version"


java.toolchain.languageVersion = JavaLanguageVersion.of(8) // Mojang ships Java 8 to end users, so your mod should target Java 8.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: "$mc_version"

    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be changed as needed.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            mods {
                atlasextras {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                atlasextras {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'atlasextras', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                atlasextras {
                    source sourceSets.main
                }
            }
        }
    }

}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }


repositories {
    mavenCentral()
    maven { url = "http://dvs1.progwml6.com/files/maven" }
    maven { url = "http://maven.blamejared.com" }
    maven { url = "https://www.cursemaven.com" }

}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.1.24'

    compile fg.deobf("curse.maven:antique-atlas-227795:3178423")
    compile fg.deobf("curse.maven:waystones-245755:3330385")

    runtime "curse.maven:jei-238222:3327383"
}

jar {
    manifest {
        attributes([
                "Specification-Title": "AtlasExtras",
                "Specification-Vendor": "Shyrik",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"Shyrik",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

//jar.finalizedBy('reobfJar')

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}


tasks.build.dependsOn('deobfJar')

artifacts {
    archives deobfJar
}
